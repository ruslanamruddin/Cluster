// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || "https://bjbltjpiydaadpghgmdz.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJqYmx0anBpeWRhYWRwZ2hnbWR6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI2Nzk4MTUsImV4cCI6MjA1ODI1NTgxNX0.4Qyq9N2nsgz6x6hkCOIqfy1PZQYspqhajr0BlEX6IQ0";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export type JoinRequestResponse = {
  id?: string;
  status?: string;
  error?: string;
};

export type ProcessRequestResponse = {
  message?: string;
  error?: string;
};

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true
    },
    global: {
      headers: {
        'Content-Type': 'application/json'
      }
    },
    realtime: {
      params: {
        eventsPerSecond: 10
      }
    }
  }
);

// Debug function to test permissions
export const testPermissions = async () => {
  const { data: sessionData } = await supabase.auth.getSession();
  console.log("Current session:", sessionData);
  
  try {
    const { data, error } = await supabase.from('profiles').select('*').limit(1);
    console.log("Test query result:", { data, error });
    return { success: !error, error, data };
  } catch (err) {
    console.error("Test query error:", err);
    return { success: false, error: err };
  }
};
